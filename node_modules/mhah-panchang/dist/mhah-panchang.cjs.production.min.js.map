{"version":3,"file":"mhah-panchang.cjs.production.min.js","sources":["../src/mhahInterfaces.ts","../src/mhahMoonOutragConst.ts","../src/mhahPanchangImpl.ts","../src/mhahCalculateFunc.ts","../src/mhahLocalConstant.ts","../src/mhahPkgConstants.ts","../src/mhahSunMoonTimer.ts","../src/mhahCalendar.ts","../src/mhahPanchang.ts"],"sourcesContent":["export class corr {\n  mlcor: number;\n  mscor: number;\n  fcor: number;\n  dcor: number;\n  lcor: number;\n  constructor(\n    mlcor: number,\n    mscor: number,\n    fcor: number,\n    dcor: number,\n    lcor: number\n  ) {\n    this.mlcor = mlcor;\n    this.mscor = mscor;\n    this.fcor = fcor;\n    this.dcor = dcor;\n    this.lcor = lcor;\n  }\n}\n\nexport class corr2 {\n  l: number;\n  ml: number;\n  ms: number;\n  f: number;\n  d: number;\n  constructor(l: number, ml: number, ms: number, f: number, d: number) {\n    this.l = l;\n    this.ml = ml;\n    this.ms = ms;\n    this.f = f;\n    this.d = d;\n  }\n}\n","import { corr, corr2 } from './mhahInterfaces';\n\nexport class MhahMoonOutragConst {\n  //---------------------------------------------------------------------------\n  // Data on the Moon outrage in length.\n  //---------------------------------------------------------------------------\n\n  corrMoon = [\n    new corr(0, 0, 0, 4, 13.902),\n    new corr(0, 0, 0, 2, 2369.912),\n    new corr(1, 0, 0, 4, 1.979),\n    new corr(1, 0, 0, 2, 191.953),\n    new corr(1, 0, 0, 0, 22639.5),\n    new corr(1, 0, 0, -2, -4586.465),\n    new corr(1, 0, 0, -4, -38.428),\n    new corr(1, 0, 0, -6, -0.393),\n    new corr(0, 1, 0, 4, -0.289),\n    new corr(0, 1, 0, 2, -24.42),\n    new corr(0, 1, 0, 0, -668.146),\n    new corr(0, 1, 0, -2, -165.145),\n    new corr(0, 1, 0, -4, -1.877),\n    new corr(0, 0, 0, 3, 0.403),\n    new corr(0, 0, 0, 1, -125.154),\n    new corr(2, 0, 0, 4, 0.213),\n    new corr(2, 0, 0, 2, 14.387),\n    new corr(2, 0, 0, 0, 769.016),\n    new corr(2, 0, 0, -2, -211.656),\n    new corr(2, 0, 0, -4, -30.773),\n    new corr(2, 0, 0, -6, -0.57),\n    new corr(1, 1, 0, 2, -2.921),\n    new corr(1, 1, 0, 0, -109.673),\n    new corr(1, 1, 0, -2, -205.962),\n    new corr(1, 1, 0, -4, -4.391),\n    new corr(1, -1, 0, 4, 0.283),\n    new corr(1, -1, 0, 2, 14.577),\n    new corr(1, -1, 0, 0, 147.687),\n    new corr(1, -1, 0, -2, 28.475),\n    new corr(1, -1, 0, -4, 0.636),\n    new corr(0, 2, 0, 2, -0.189),\n    new corr(0, 2, 0, 0, -7.486),\n    new corr(0, 2, 0, -2, -8.096),\n    new corr(0, 0, 2, 2, -5.741),\n    new corr(0, 0, 2, 0, -411.608),\n    new corr(0, 0, 2, -2, -55.173),\n    new corr(0, 0, 2, -4, 0.025),\n    new corr(1, 0, 0, 1, -8.466),\n    new corr(1, 0, 0, -1, 18.609),\n    new corr(1, 0, 0, -3, 3.215),\n    new corr(0, 1, 0, 1, 18.023),\n    new corr(0, 1, 0, -1, 0.56),\n    new corr(3, 0, 0, 2, 1.06),\n    new corr(3, 0, 0, 0, 36.124),\n    new corr(3, 0, 0, -2, -13.193),\n    new corr(3, 0, 0, -4, -1.187),\n    new corr(3, 0, 0, -6, -0.293),\n    new corr(2, 1, 0, 2, -0.29),\n    new corr(2, 1, 0, 0, -7.649),\n    new corr(2, 1, 0, -2, -8.627),\n    new corr(2, 1, 0, -4, -2.74),\n    new corr(2, -1, 0, 2, 1.181),\n    new corr(2, -1, 0, 0, 9.703),\n    new corr(2, -1, 0, -2, -2.494),\n    new corr(2, -1, 0, -4, 0.36),\n    new corr(1, 2, 0, 0, -1.167),\n    new corr(1, 2, 0, -2, -7.412),\n    new corr(1, 2, 0, -4, -0.311),\n    new corr(1, -2, 0, 2, 0.757),\n    new corr(1, -2, 0, 0, 2.58),\n    new corr(1, -2, 0, -2, 2.533),\n    new corr(0, 3, 0, -2, -0.344),\n    new corr(1, 0, 2, 2, -0.992),\n    new corr(1, 0, 2, 0, -45.099),\n    new corr(1, 0, 2, -2, -0.179),\n    new corr(1, 0, -2, 2, -6.382),\n    new corr(1, 0, -2, 0, 39.528),\n    new corr(1, 0, -2, -2, 9.366),\n    new corr(0, 1, 2, 0, 0.415),\n    new corr(0, 1, 2, -2, -2.152),\n    new corr(0, 1, -2, 2, -1.44),\n    new corr(0, 1, -2, -2, 0.384),\n    new corr(2, 0, 0, 1, -0.586),\n    new corr(2, 0, 0, -1, 1.75),\n    new corr(2, 0, 0, -3, 1.225),\n    new corr(1, 1, 0, 1, 1.267),\n    new corr(1, -1, 0, -1, -1.089),\n    new corr(0, 0, 2, -1, 0.584),\n    new corr(4, 0, 0, 0, 1.938),\n    new corr(4, 0, 0, -2, -0.952),\n    new corr(3, 1, 0, 0, -0.551),\n    new corr(3, 1, 0, -2, -0.482),\n    new corr(3, -1, 0, 0, 0.681),\n    new corr(2, 0, 2, 0, -3.996),\n    new corr(2, 0, 2, -2, 0.557),\n    new corr(2, 0, -2, 2, -0.459),\n    new corr(2, 0, -2, 0, -1.298),\n    new corr(2, 0, -2, -2, 0.538),\n    new corr(1, 1, -2, -2, 0.426),\n    new corr(1, -1, 2, 0, -0.304),\n    new corr(1, -1, -2, 2, -0.372),\n    new corr(0, 0, 4, 0, 0.418),\n    new corr(2, -1, 0, -1, -0.352),\n  ];\n\n  // l, ml, ms, f, d\n  //corrMoon2 = new Array(); // additional\n\n  corrMoon2 = [\n    new corr2(0.127, 0, 0, 0, 6),\n    new corr2(-0.151, 0, 2, 0, -4),\n    new corr2(-0.085, 0, 0, 2, 4),\n    new corr2(0.15, 0, 1, 0, 3),\n    new corr2(-0.091, 2, 1, 0, -6),\n    new corr2(-0.103, 0, 3, 0, 0),\n    new corr2(-0.301, 1, 0, 2, -4),\n    new corr2(0.202, 1, 0, -2, -4),\n    new corr2(0.137, 1, 1, 0, -1),\n    new corr2(0.233, 1, 1, 0, -3),\n    new corr2(-0.122, 1, -1, 0, 1),\n    new corr2(-0.276, 1, -1, 0, -3),\n    new corr2(0.255, 0, 0, 2, 1),\n    new corr2(0.254, 0, 0, 2, -3),\n    new corr2(-0.1, 3, 1, 0, -4),\n    new corr2(-0.183, 3, -1, 0, -2),\n    new corr2(-0.297, 2, 2, 0, -2),\n    new corr2(-0.161, 2, 2, 0, -4),\n    new corr2(0.197, 2, -2, 0, 0),\n    new corr2(0.254, 2, -2, 0, -2),\n    new corr2(-0.25, 1, 3, 0, -2),\n    new corr2(-0.123, 2, 0, 2, 2),\n    new corr2(0.173, 2, 0, -2, -4),\n    new corr2(0.263, 1, 1, 2, 0),\n    new corr2(0.13, 3, 0, 0, -1),\n    new corr2(0.113, 5, 0, 0, 0),\n    new corr2(0.092, 3, 0, 2, -2),\n  ];\n}\n","import { MhahMoonOutragConst } from './mhahMoonOutragConst';\nimport { MhahLocalConstant } from './mhahLocalConstant';\n\nexport class MhahPanchangImpl {\n  kyear!: number;\n  kmon!: number;\n  kday!: number;\n  private mhahMoonOutragConst: MhahMoonOutragConst = new MhahMoonOutragConst();\n  constructor(private mhahConstant: MhahLocalConstant) {}\n  d2r = Math.PI / 180;\n  r2d = 180 / Math.PI;\n  range = [1, 31, 0, 0, -3000, 4000, 0, 23, 0, 59, -12, 12, 0, 59];\n  tipnaks = [\n    2,\n    5,\n    6,\n    0,\n    1,\n    4,\n    3,\n    2,\n    4,\n    5,\n    5,\n    0,\n    2,\n    1,\n    3,\n    6,\n    1,\n    4,\n    4,\n    5,\n    0,\n    3,\n    3,\n    3,\n    5,\n    0,\n    1,\n  ];\n  Lmoon!: number;\n  Lsun!: number;\n  skor!: number;\n  LmoonYoga!: number;\n  LsunYoga!: number;\n  dt!: number;\n  ayanamsa: number = 0;\n\n  daysInMonth(m: number, y: number) {\n    let g_days: number[] = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if ((y % 4 === 0 && y % 100 !== 0) || y % 400 === 0) g_days[1] = 29;\n    return g_days[m];\n  }\n\n  //-----------------------------------------------------------------------------------\n  // Calculating geotsent p avoid longitude Moon and angular sector p News.\n  // (2 sec accuracy. longitude)\n  //-----------------------------------------------------------------------------------\n  moon(jd: number) {\n    // days from 1900\n    let tdays = jd - 2415020;\n    let t = tdays / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    // slope travels to the equator\n    //let ob = 23.452294 - 0.0130125 * t - 0.00000164 * t2 + 0.000000503 * t3;\n    // the average length moon\n    let l =\n      270.4337361 +\n      13.176396544528099 * tdays -\n      (5.86 * t2) / 3600 +\n      (0.0068 * t3) / 3600;\n    // the difference medium length Moon and the Sun (the averageElongation Moon):\n    let d =\n      350.7374861110581 +\n      445267.1142166667 * t -\n      t2 * 1.436111132303874e-3 +\n      0.0000018888889 * t3;\n    // Perigee moon\n    let pe =\n      334.329556 +\n      (14648522.52 * t) / 3600 -\n      (37.17 * t2) / 3600 -\n      (0.045 * t3) / 3600;\n    // the average anomoly sun\n    let ms =\n      358.4758333333334 +\n      35999.04974999958 * t -\n      t2 * 1.500000059604645e-4 -\n      t3 * 3.3333333623078e-6;\n    // The average anomoloy moon\n    //ml = 296.1046083333757 + 477198.8491083336*t + 0.0091916667090522*t2 + 0.0000143888893*t3;\n    let ml = this.fix360(l - pe);\n    // Rising length node orbit the moon:\n    let om =\n      259.183275 -\n      (6962911.23 * t) / 3600 +\n      (7.48 * t2) / 3600 +\n      (0.008 * t3) / 3600;\n    // the average length Moon, measured from the bottom up hub orbit:\n\n    let f = this.fix360(l - om);\n\n    // periodic revisions\n    let r2rad = 360.0 * this.d2r;\n    let tb = tdays * 1e-12; // *10^12\n    let t2c = tdays * tdays * 1e-16; // *10^16\n    let a1 = Math.sin(r2rad * (0.53733431 - 10104982 * tb + 191 * t2c));\n    let a2 = Math.sin(r2rad * (0.71995354 - 147094228 * tb + 43 * t2c));\n    let c2 = Math.cos(r2rad * (0.71995354 - 147094228 * tb + 43 * t2c));\n    let a3 = Math.sin(r2rad * (0.14222222 + 1536238 * tb));\n    let a4 = Math.sin(r2rad * (0.48398132 - 147269147 * tb + 43 * t2c));\n    let c4 = Math.cos(r2rad * (0.48398132 - 147269147 * tb + 43 * t2c));\n    let a5 = Math.sin(r2rad * (0.52453688 - 147162675 * tb + 43 * t2c));\n    let a6 = Math.sin(r2rad * (0.84536324 - 11459387 * tb));\n    let a7 = Math.sin(r2rad * (0.23363774 + 1232723 * tb + 191 * t2c));\n    let a8 = Math.sin(r2rad * (0.5875 + 9050118 * tb));\n    let a9 = Math.sin(r2rad * (0.61043085 - 67718733 * tb));\n\n    let dlm =\n      0.84 * a3 + 0.31 * a7 + 14.27 * a1 + 7.261 * a2 + 0.282 * a4 + 0.237 * a6;\n    let dpm = -2.1 * a3 - 2.076 * a2 - 0.84 * a4 - 0.593 * a6;\n    let dkm = 0.63 * a3 + 95.96 * a2 + 15.58 * a4 + 1.86 * a5;\n    let dls = -6.4 * a3 - 0.27 * a8 - 1.89 * a6 + 0.2 * a9;\n    let dgc = (-4.318 * c2 - 0.698 * c4) / 3600.0 / 360.0;\n    dgc = 1.000002708 + 139.978 * dgc;\n\n    ml = this.d2r * (ml + (dlm - dpm) / 3600.0); //Average anomoly moon\n    ms = this.d2r * (ms + dls / 3600.0); //Average anomoly sun\n    f = this.d2r * (f + (dlm - dkm) / 3600.0);\n    d = this.d2r * (d + (dlm - dls) / 3600.0); //avg elongation moon\n\n    let lk = 0;\n    let lk1 = 0;\n\n    let i1corr = 1.0 - 6.832e-8 * tdays;\n    let i2corr = dgc * dgc;\n\n    for (let i = 0; i < 93; i++) {\n      // outrage at length\n      let arg =\n        this.mhahMoonOutragConst.corrMoon[i].mlcor * ml +\n        this.mhahMoonOutragConst.corrMoon[i].mscor * ms +\n        this.mhahMoonOutragConst.corrMoon[i].fcor * f +\n        this.mhahMoonOutragConst.corrMoon[i].dcor * d;\n      let sinarg = Math.sin(arg);\n      if (this.mhahMoonOutragConst.corrMoon[i].mscor !== 0) {\n        sinarg *= i1corr;\n        if (\n          this.mhahMoonOutragConst.corrMoon[i].mscor === 2 ||\n          this.mhahMoonOutragConst.corrMoon[i].mscor === -2\n        )\n          sinarg *= i1corr;\n      }\n      if (this.mhahMoonOutragConst.corrMoon[i].fcor !== 0) sinarg *= i2corr;\n      lk += this.mhahMoonOutragConst.corrMoon[i].lcor * sinarg;\n    }\n    for (let i = 0; i < 27; i++) {\n      // outrage at length additional\n      let arg =\n        this.mhahMoonOutragConst.corrMoon2[i].ml * ml +\n        this.mhahMoonOutragConst.corrMoon2[i].ms * ms +\n        this.mhahMoonOutragConst.corrMoon2[i].f * f +\n        this.mhahMoonOutragConst.corrMoon2[i].d * d;\n      let sinarg = Math.sin(arg);\n      lk1 += this.mhahMoonOutragConst.corrMoon2[i].l * sinarg;\n    }\n\n    // resentments of the planets\n    let dlid = 0.822 * Math.sin(r2rad * (0.3248 - 0.0017125594 * tdays));\n    dlid += 0.307 * Math.sin(r2rad * (0.14905 - 0.0034251187 * tdays));\n    dlid += 0.348 * Math.sin(r2rad * (0.68266 - 0.0006873156 * tdays));\n    dlid += 0.662 * Math.sin(r2rad * (0.65162 + 0.0365724168 * tdays));\n    dlid += 0.643 * Math.sin(r2rad * (0.88098 - 0.0025069941 * tdays));\n    dlid += 1.137 * Math.sin(r2rad * (0.85823 + 0.036448727 * tdays));\n    dlid += 0.436 * Math.sin(r2rad * (0.71892 + 0.036217918 * tdays));\n    dlid += 0.327 * Math.sin(r2rad * (0.97639 + 0.000173491 * tdays));\n\n    l = l + this.nutation(jd) + (dlm + lk + lk1 + dlid) / 3600.0;\n    this.LmoonYoga = l;\n    //alert(\"Lmoon=\"+l);\n    l = this.fix360(l);\n\n    // angular velocity of the moon on ecliptic (deg/day):\n    let vl = 13.176397;\n    vl = vl + 1.434006 * Math.cos(ml);\n    vl = vl + 0.280135 * Math.cos(2 * d);\n    vl = vl + 0.251632 * Math.cos(2 * d - ml);\n    vl = vl + 0.09742 * Math.cos(2 * ml);\n    vl = vl - 0.052799 * Math.cos(2 * f);\n    vl = vl + 0.034848 * Math.cos(2 * d + ml);\n    vl = vl + 0.018732 * Math.cos(2 * d - ms);\n    vl = vl + 0.010316 * Math.cos(2 * d - ms - ml);\n    vl = vl + 0.008649 * Math.cos(ms - ml);\n    vl = vl - 0.008642 * Math.cos(2 * f + ml);\n    vl = vl - 0.007471 * Math.cos(ms + ml);\n    vl = vl - 0.007387 * Math.cos(d);\n    vl = vl + 0.006864 * Math.cos(3 * ml);\n    vl = vl + 0.00665 * Math.cos(4 * d - ml);\n    vl = vl + 0.003523 * Math.cos(2 * d + 2 * ml);\n    vl = vl + 0.003377 * Math.cos(4 * d - 2 * ml);\n    vl = vl + 0.003287 * Math.cos(4 * d);\n    vl = vl - 0.003193 * Math.cos(ms);\n    vl = vl - 0.003003 * Math.cos(2 * d + ms);\n    vl = vl + 0.002577 * Math.cos(ml - ms + 2 * d);\n    vl = vl - 0.002567 * Math.cos(2 * f - ml);\n    vl = vl - 0.001794 * Math.cos(2 * d - 2 * ml);\n    vl = vl - 0.001716 * Math.cos(ml - 2 * f - 2 * d);\n    vl = vl - 0.001698 * Math.cos(2 * d + ms - ml);\n    vl = vl - 0.001415 * Math.cos(2 * d + 2 * f);\n    vl = vl + 0.001183 * Math.cos(2 * ml - ms);\n    vl = vl + 0.00115 * Math.cos(d + ms);\n    vl = vl - 0.001035 * Math.cos(d + ml);\n    vl = vl - 0.001019 * Math.cos(2 * f + 2 * ml);\n    vl = vl - 0.001006 * Math.cos(ms + 2 * ml);\n\n    this.skor = vl;\n    //l += ay;\n    //if(l < 0.0)l += 360.0;\n    return l;\n  }\n\n  //----------------------------------------------------------------------\n  // Calculating geotsent p avoid longitude Sun.\n  // (the acuracy of 1 sec . longitude)\n  //----------------------------------------------------------------------\n  sun(jd: number) {\n    // days frm 1900:\n    let tdays = jd - 2415020;\n\n    let t = tdays / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    // the avg len sun\n\n    let ls = 279.696678 + 0.9856473354 * tdays + (1.089 * t2) / 3600;\n    // perigee sun\n    let pes =\n      101.220833 +\n      (6189.03 * t) / 3600 +\n      (1.63 * t2) / 3600 +\n      (0.012 * t3) / 3600;\n    // avg anomoly sun\n\n    let ms = this.fix360(ls - pes + 180);\n    let g =\n      ms +\n      (0.266 * Math.sin((31.8 + 119.0 * t) * this.d2r) +\n        6.4 * Math.sin((231.19 + 20.2 * t) * this.d2r) +\n        (1.882 - 0.016 * t) * Math.sin((57.24 + 150.27 * t) * this.d2r)) /\n        3600.0;\n\n    // eccentricity orbit sun\n    let ex = 0.01675104 - 0.0000418 * t - 0.000000126 * t2;\n\n    // eccentric anomoloy calculation iterative method\n    let u = this.kepler(g, ex, 0.0000003);\n\n    // cal true anomaly sun\n    let truanom;\n    let b = Math.sqrt((1 + ex) / (1 - ex));\n    if (Math.abs(Math.PI - u) < 1.0e-10) truanom = u;\n    else truanom = 2.0 * Math.atan(b * Math.tan(u / 2));\n    truanom = this.fix360(truanom * this.r2d);\n\n    //corrections for cal of longitude and radius vector\n    let u1 = (153.23 + 22518.7541 * t) * this.d2r;\n    let u2 = (216.57 + 45037.5082 * t) * this.d2r;\n    let u3 = (312.69 + 32964.3577 * t) * this.d2r;\n    let u4 = (350.74 + 445267.1142 * t - 0.00144 * t2) * this.d2r;\n    let u6 = (353.4 + 65928.71550000001 * t) * this.d2r;\n    let u5 = (315.6 + 893.3 * t) * this.d2r;\n\n    let dl = 0.00134 * Math.cos(u1);\n    dl += 0.00154 * Math.cos(u2);\n    dl += 0.002 * Math.cos(u3);\n    dl += 0.00179 * Math.sin(u4);\n    dl += (0.202 * Math.sin(u5)) / 3600;\n\n    let dr = 0.00000543 * Math.sin(u1);\n    dr += 0.00001575 * Math.sin(u2);\n    dr += 0.00001627 * Math.sin(u3);\n    dr += 0.00003076 * Math.cos(u4);\n    dr += 9.26999999e-6 * Math.sin(u6);\n\n    // true len of sun (deg)\n    let il = ls + dl + truanom - ms;\n\n    // corrections to abberations links\n    let r1 =\n      (1.0000002 * (1 - ex * ex)) / (1 + ex * Math.cos(truanom * this.d2r));\n    let rs = r1 + dr; // radius vector\n    let ab = (20.496 * (1 - ex * ex)) / rs / 3600;\n    ls = il + this.nutation(jd) - ab; // app len sun\n    this.LsunYoga = ls;\n\n    ls = this.fix360(ls);\n\n    return ls;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal start and end of tithi (len = 12)and karana (len = 6)\n  //----------------------------------------------------------------------------\n  tithi(jd: number, n1: number, tzone: number, len: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n    let knv = Math.floor(((jd - 2415020) / 365.25) * 12.3685);\n\n    for (let itit = n1; itit < n1 + 2; ++itit) {\n      let aspect = len * itit; // sun n moon in the early tithi\n      flag = 0;\n      if (aspect === 0) {\n        jdt = this.novolun(jd, knv);\n        flag = 1;\n      }\n      if (aspect === 360) {\n        jdt = this.novolun(jd, knv + 1);\n        flag = 1;\n      }\n      while (flag < 1) {\n        let Lsun0 = this.sun(jdt);\n        let Lmoon0 = this.moon(jdt);\n        let a = this.fix360(Lsun0 + aspect); // pt should be where luna\n        let asp1 = a - Lmoon0; // assymptots of the moon to ur point\n        if (asp1 > 180) asp1 -= 360;\n        if (asp1 < -180) asp1 += 360;\n        flag = 1;\n\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / (this.skor - 1);\n          flag = 0;\n        }\n      }\n      if (itit === n1) s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (itit === n1 + 1) s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal entry and exit moon in nakshatra\n  //----------------------------------------------------------------------------\n  nakshatra(jd: number, n_naksh: number, tzone: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n\n    for (let inak = n_naksh; inak < n_naksh + 2; ++inak) {\n      let n1 = this.fix360((inak * 80) / 6); // co-ordinate start of nakshatra\n      flag = 0;\n      while (flag < 1) {\n        let Lmoon0 = this.fix360(this.moon(jdt) + this.ayanamsa);\n        let asp1 = n1 - Lmoon0; // distance frm moon before nakshatra(degree)\n        if (asp1 > 180) asp1 -= 360;\n        if (asp1 < -180) asp1 += 360;\n        flag = 1;\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / this.skor;\n          flag = 0;\n        }\n      }\n      if (inak === n_naksh)\n        s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (inak === n_naksh + 1)\n        s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //----------------------------------------------------------------------------\n  // cal begin and end of yoga\n  //----------------------------------------------------------------------------\n  yoga(jd: number, zyoga: number, tzone: number) {\n    var s_t: any = {};\n    var flag;\n    let jdt = jd;\n    let z = zyoga;\n    var nn_yoga = new Array(2);\n    nn_yoga[0] = (Math.floor((z * 6) / 80) * 80) / 6;\n    nn_yoga[1] = ((Math.floor((z * 6) / 80) + 1) * 80) / 6;\n    for (let iyog = 0; iyog < 2; ++iyog) {\n      flag = 0;\n      while (flag < 1) {\n        this.sun(jdt);\n        this.moon(jdt);\n        let dmoonYoga = this.LmoonYoga + this.ayanamsa - 491143.07698973856;\n        let dsunYoga = this.LsunYoga + this.ayanamsa - 36976.91240579201;\n        //alert(LmoonYoga+\"\\r\"+LsunYoga+\"\\r\"+ayanamsa);\n        z = dmoonYoga + dsunYoga;\n        let asp1 = nn_yoga[iyog] - z;\n        flag = 1;\n        if (Math.abs(asp1) > 0.001) {\n          jdt += asp1 / (this.skor + 1.0145616633);\n          flag = 0;\n        }\n        //if (Math.abs(asp1) > 0.001) {jdt += (asp1 / skor) + (58.13 * Math.sin(asp1*d2r)); flag = 0;}\n      }\n      if (iyog === 0) s_t.start = this.calData(jdt + (tzone - this.dt) / 24);\n      if (iyog === 1) s_t.end = this.calData(jdt + (tzone - this.dt) / 24);\n    }\n    return s_t;\n  }\n\n  //-----------------------------------------------------------------------------\n  //cal time in the near past novoluna (err less then 2 min)\n  //-----------------------------------------------------------------------------\n  novolun(jd: number, knv: number) {\n    let t = (jd - 2415020) / 36525;\n    let t2 = t * t;\n    let t3 = t * t * t;\n\n    let jdnv =\n      2415020.75933 + 29.53058868 * knv + 0.0001178 * t2 - 0.000000155 * t3;\n    jdnv +=\n      0.00033 * Math.sin((166.56 + 132.87 * t - 0.009173 * t2) * this.d2r);\n    let m = 359.2242 + 29.10535608 * knv - 0.0000333 * t2 - 0.00000347 * t3;\n    let ml = 306.0253 + 385.81691806 * knv + 0.0107306 * t2 + 0.00001236 * t3;\n    let f = 21.2964 + 390.67050646 * knv - 0.0016528 * t2 - 0.00000239 * t3;\n    m *= this.d2r;\n    ml *= this.d2r;\n    f *= this.d2r;\n\n    let djd = (0.1734 - 0.000393 * t) * Math.sin(m);\n    djd += 0.0021 * Math.sin(2 * m);\n    djd -= 0.4068 * Math.sin(ml);\n    djd += 0.0161 * Math.sin(2 * ml);\n    djd -= 0.0004 * Math.sin(3 * ml);\n    djd += 0.0104 * Math.sin(2 * f);\n    djd -= 0.0051 * Math.sin(m + ml);\n    djd -= 0.0074 * Math.sin(m - ml);\n    djd += 0.0004 * Math.sin(2 * f + m);\n    djd -= 0.0004 * Math.sin(2 * f - m);\n    djd -= 0.0006 * Math.sin(2 * f + ml);\n    djd += 0.001 * Math.sin(2 * f - ml);\n    djd += 0.0005 * Math.sin(m + 2 * ml);\n\n    jdnv += djd;\n    return jdnv;\n  }\n\n  //-----------------------------------------------------\n  // decision equation kepler (in rad)\n  //-----------------------------------------------------\n  kepler(m: number, ex: number, err: number) {\n    //val u0, delta;\n\n    m *= this.d2r;\n    let u0 = m;\n    err *= this.d2r;\n    let delta = 1;\n    while (Math.abs(delta) >= err) {\n      delta = (m + ex * Math.sin(u0) - u0) / (1 - ex * Math.cos(u0));\n      u0 += delta;\n    }\n    return u0;\n  }\n\n  //-----------------------------------------------------\n  // cal nutation in len\n  //-----------------------------------------------------\n  nutation(jd: number) {\n    let t = (jd - 2415020) / 36525;\n    let t2 = t * t;\n\n    // avg len sun\n    let ls = 279.6967 + 36000.7689 * t + 0.000303 * t2;\n    // avg len moon\n    let l = 270.4341639 + 481267.8831417 * t - 0.0011333333 * t2;\n    // avg anomaly sun\n    let ms =\n      358.4758333333334 + 35999.04974999958 * t - t2 * 1.500000059604645e-4;\n    // avg anomaly moon\n    let ml =\n      296.1046083333757 + 477198.8491083336 * t + 0.0091916667090522 * t2;\n    // the diff medium len of moon and sun (avg elongation moon)\n    let d =\n      350.7374861110581 + 445267.1142166667 * t - t2 * 1.436111132303874e-3;\n\n    let om = 259.1832750002543 - 1934.142008333206 * t + 0.0020777778 * t2;\n    ls *= this.d2r;\n    l *= this.d2r;\n    ms *= this.d2r;\n    ml *= this.d2r;\n    d *= this.d2r;\n    om *= this.d2r;\n    let d2 = d * d;\n    let l2 = l * l;\n    let ls2 = ls * ls;\n\n    let nut = (-17.2327 - 0.01737 * t) * Math.sin(om);\n    nut += 0.2088 * Math.sin(2.0 * om);\n    nut += 0.0675 * Math.sin(ml);\n    nut -= 0.0149 * Math.sin(ml - d2);\n    nut -= 0.0342 * Math.sin(l2 - om);\n    nut += 0.0114 * Math.sin(l2 - ml);\n    nut -= 0.2037 * Math.sin(l2);\n    nut -= 0.0261 * Math.sin(l2 + ml);\n    nut += 0.0124 * Math.sin(ls2 - om);\n    nut += 0.0214 * Math.sin(ls2 - ms);\n    nut -= 1.2729 * Math.sin(ls2);\n    nut -= 0.0497 * Math.sin(ls2 + ms);\n    nut += 0.1261 * Math.sin(ms);\n    nut = nut / 3600.0;\n\n    return nut;\n  }\n\n  //-----------------------------------------------------\n  // Calculation ayanamsa (degrees)\n  //-----------------------------------------------------\n  calcayan(jd: number) {\n    let t = (jd - 2415020) / 36525;\n    // avg node len moon\n    let om =\n      259.183275 -\n      1934.142008333206 * t +\n      0.0020777778 * t * t +\n      0.0000022222222 * t * t * t;\n    // avg len sun\n    let ls = 279.696678 + 36000.76892 * t + 0.0003025 * t * t;\n    let aya =\n      17.23 * Math.sin(this.d2r * om) +\n      1.27 * Math.sin(this.d2r * ls * 2) -\n      (5025.64 + 1.11 * t) * t;\n    aya = (aya - 80861.27) / 3600.0; // 84038.27 = Fagan-Bradley, 80861.27 = Lahiri\n\n    return aya;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // cal date by number of date mon and year\n  //------------------------------------------------------------------------------------------\n  mdy2julian(m: number, d: number, y: number) {\n    let im = 12 * (y + 4800) + m - 3;\n    let j = (2 * (im - Math.floor(im / 12) * 12) + 7 + 365 * im) / 12;\n    j = Math.floor(j) + d + Math.floor(im / 48) - 32083;\n    if (j > 2299171) j += Math.floor(im / 4800) - Math.floor(im / 1200) + 38;\n    j -= 0.5;\n\n    return j;\n  }\n\n  dTime(jd: number) {\n    var efdt = [\n      124,\n      85,\n      62,\n      48,\n      37,\n      26,\n      16,\n      10,\n      9,\n      10,\n      11,\n      11,\n      12,\n      13,\n      15,\n      16,\n      17,\n      17,\n      13.7,\n      12.5,\n      12,\n      7.5,\n      5.7,\n      7.1,\n      7.9,\n      1.6,\n      -5.4,\n      -5.9,\n      -2.7,\n      10.5,\n      21.2,\n      24,\n      24.3,\n      29.2,\n      33.2,\n      40.2,\n      50.5,\n      56.9,\n      65.7,\n      75.5,\n    ];\n    this.calData(jd);\n    let dgod = this.kyear + (this.kmon - 1) / 12 + (this.kday - 1) / 365.25;\n    let t = (jd - 2378497) / 36525; // IN centuries rejection of 1800 bc\n    //t = (jd - 2415020)/36525; // in cent rejection of 1900 bc\n    if (dgod >= 1620 && dgod < 2010) {\n      let i1 = Math.floor((dgod - 1620) / 10);\n      let di = dgod - (1620 + i1 * 10);\n      this.dt = efdt[i1] + ((efdt[i1 + 1] - efdt[i1]) * di) / 10;\n    } else {\n      if (dgod >= 2010) this.dt = 25.5 * t * t - 39;\n      //if (dgod >= 2010) dt = 29.949 * t * t - 56.796;\n      //if (dgod < 1620) dt = 5 + 24.349 + 72.3165 * t + 29.949 * t * t;\n      if (dgod >= 948 && dgod < 1620) this.dt = 25.5 * t * t;\n      if (dgod < 948) this.dt = 1361.7 + 320 * t + 44.3 * t * t;\n    }\n    this.dt /= 3600;\n    return this.dt;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // cal date on calendar date\n  //------------------------------------------------------------------------------------------\n  calData(jd: number) {\n    let z1 = jd + 0.5;\n    let z2 = Math.floor(z1);\n    let f = z1 - z2;\n\n    let a, alf;\n    if (z2 < 2299161) a = z2;\n    else {\n      alf = Math.floor((z2 - 1867216.25) / 36524.25);\n      a = z2 + 1 + alf - Math.floor(alf / 4);\n    }\n\n    let b = a + 1524;\n    let c = Math.floor((b - 122.1) / 365.25);\n    let d = Math.floor(365.25 * c);\n    let e = Math.floor((b - d) / 30.6001);\n\n    let days = b - d - Math.floor(30.6001 * e) + f;\n    this.kday = Math.floor(days);\n\n    if (e < 13.5) this.kmon = e - 1;\n    else this.kmon = e - 13;\n\n    if (this.kmon > 2.5) this.kyear = c - 4716;\n    if (this.kmon < 2.5) this.kyear = c - 4715;\n\n    let hh1 = (days - this.kday) * 24;\n    let khr = Math.floor(hh1);\n    let kmin = hh1 - khr;\n    let ksek = kmin * 60;\n    kmin = Math.floor(ksek);\n    ksek = Math.floor((ksek - kmin) * 60);\n    let s = new Date(this.kyear, this.kmon - 1, this.kday, khr, kmin, ksek, 0);\n\n    return s;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // transalation deg logitudinal in degrees,min and sec\n  //------------------------------------------------------------------------------------------\n  lon2dmsz(x: number) {\n    var d, m, s;\n    x = Math.abs(x);\n    d = Math.floor(x);\n    let ss0 = Math.round((x - d) * 3600);\n    m = Math.floor(ss0 / 60);\n    s = (ss0 % 60) % 60;\n    d %= 30;\n    let str = d + ' ' + m + \"'\" + s + '\" ';\n    return str;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // translation degrees in deg, min and sec\n  //------------------------------------------------------------------------------------------\n  lon2dms(x: number) {\n    var d, m, s;\n    x = Math.abs(x);\n    d = Math.floor(x);\n    let ss0 = Math.round((x - d) * 3600);\n    m = Math.floor(ss0 / 60);\n    s = (ss0 % 60) % 60;\n    let str = d + ' ' + m + \"'\" + s + '\"';\n\n    return str;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // fixing the angle within 360 degrees\n  //------------------------------------------------------------------------------------------\n  fix360(v: number) {\n    while (v < 0.0) v += 360.0;\n    while (v > 360.0) v -= 360.0;\n    return v;\n  }\n\n  //------------------------------------------------------------------------------------------\n  // Day of the Week\n  //------------------------------------------------------------------------------------------\n  weekDay(jd: number) {\n    // Julian date for the begin of the day\n    let jd0 = Math.floor(jd) + 0.5;\n    if (jd < jd0) jd0 -= 1;\n\n    // day\n    let jdn = jd0 + 1.5;\n    let dn1 = Math.floor(jdn / 7) * 7;\n\n    let wday = Math.floor(jdn - dn1);\n\n    return wday;\n  }\n\n  lunarPhase(jd: number): number {\n    let Lmoon = this.moon(jd); // Logitudinal Moon\n    let Lsun = this.sun(jd); // Logitudinal Sun\n    return this.fix360(Lmoon - Lsun);\n  }\n}\n","import { MhahLocalConstant } from './mhahLocalConstant';\nimport { MhahPanchangImpl } from './mhahPanchangImpl';\n\nexport class MhahCalculateFunc {\n  calculate(d: Date, mhahConstant: MhahLocalConstant) {\n    let mhahPanchangImpl = new MhahPanchangImpl(mhahConstant);\n    let Day: any = {} as {};\n    let Tithi: any = {} as {};\n    let Paksha: any = {} as {};\n    let Nakshatra: any = {} as {};\n    let Karna: any = {} as {};\n    let Yoga: any = {} as {};\n    let Ayanamsa: any = {} as {};\n    let Raasi: any = {} as {};\n    let Julian: any = {} as {};\n    let Gana: any = {} as {};\n    let Guna: any = {} as {};\n    let Trinity: any = {} as {};\n\n    var n_wday,\n      n_tithi = 1,\n      n_naksh = 1,\n      n_karana = 0,\n      n_yoga;\n    //var mhahPanchangImpl = new MhahPanchangImpl();\n\n    var day = d.getDate();\n    var mon = d.getMonth() + 1;\n    var year = d.getFullYear();\n    var hr = d.getHours();\n    hr += d.getMinutes() / 60;\n    var tzone = (d.getTimezoneOffset() / 60) * -1;\n\n    let inpmin: any = Math.floor(d.getMinutes());\n    if (inpmin < 10) inpmin = '0' + inpmin;\n\n    // Julian date in local p. LT:\n    let dayhr = day + hr / 24;\n    let jdlt = mhahPanchangImpl.mdy2julian(mon, dayhr, year);\n\n    // Day:\n    n_wday = mhahPanchangImpl.weekDay(jdlt);\n    Day.ino = n_wday;\n    Day.name = mhahConstant.Day.name[n_wday];\n    Day.name_en_UK = mhahConstant.Day.name_en_UK[n_wday];\n\n    // julian day at the begining of the day\n    let jd0 = mhahPanchangImpl.mdy2julian(mon, day, year);\n    let jdut = jd0 + (hr - tzone) / 24;\n    mhahPanchangImpl.dt = mhahPanchangImpl.dTime(jdut);\n    let jd = jdut + mhahPanchangImpl.dt / 24;\n\n    //ayyanamsa\n    mhahPanchangImpl.ayanamsa = mhahPanchangImpl.calcayan(jd);\n\n    // Logitudinal Moon\n    mhahPanchangImpl.Lmoon = mhahPanchangImpl.moon(jd);\n\n    // Logitudinal Sun\n    mhahPanchangImpl.Lsun = mhahPanchangImpl.sun(jd);\n\n    // yoga:\n    let zyoga = this.getZYoga(mhahPanchangImpl, mhahPanchangImpl.ayanamsa, jd);\n    n_yoga = this.getYoga(zyoga);\n    let s_yoga = mhahPanchangImpl.yoga(jd, zyoga, tzone);\n\n    // Nakstra\n    n_naksh = this.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.ayanamsa\n    );\n    var s_naksh = mhahPanchangImpl.nakshatra(jd, n_naksh, tzone);\n\n    // tithi\n    n_tithi = this.getTithi(mhahPanchangImpl.Lmoon, mhahPanchangImpl.Lsun);\n    var s_tithi = mhahPanchangImpl.tithi(jd, n_tithi, tzone, 12);\n\n    // paksha\n    let n_paksha = this.getPaksha(n_tithi + 1);\n\n    // Karana\n    let KaranaArray = this.getKarana(\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.Lsun\n    );\n    n_karana = KaranaArray[0];\n    let nk = KaranaArray[1];\n    let s_karana = mhahPanchangImpl.tithi(jd, nk, tzone, 6);\n\n    let z = this.getRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.Lmoon,\n      mhahPanchangImpl.ayanamsa\n    );\n\n    Ayanamsa.name = mhahPanchangImpl.lon2dms(mhahPanchangImpl.ayanamsa);\n    Raasi.name = mhahConstant.Raasi.name[z];\n    Raasi.ino = z;\n    Raasi.name_en_UK = mhahConstant.Raasi.name_en_UK[z];\n\n    Guna.ino = this.getRaasiGuna(Raasi.ino);\n    Guna.name_en_IN = mhahConstant.Guna.name_en_IN[Guna.ino];\n    Guna.name_en_UK = mhahConstant.Guna.name_en_UK[Guna.ino];\n    Guna.name = mhahConstant.Guna.name[Guna.ino];\n\n    Nakshatra.name = mhahConstant.Nakshatra.name[n_naksh];\n    Nakshatra.name_en_IN = mhahConstant.Nakshatra.name_en_IN[n_naksh];\n    Nakshatra.ino = n_naksh;\n    Nakshatra.start = s_naksh.start;\n    Nakshatra.end = s_naksh.end;\n\n    Trinity.ino = this.getTrinityByNakshatra(Nakshatra.ino);\n    Trinity.name_en_IN = mhahConstant.Trinity.name_en_IN[Trinity.ino];\n    Trinity.name = mhahConstant.Trinity.name[Trinity.ino];\n    Gana.ino = this.getGanaViaNakshatra(Nakshatra.ino);\n    Gana.name_en_IN = mhahConstant.Gana.name_en_IN[Gana.ino];\n    Gana.name_en_UK = mhahConstant.Gana.name_en_UK[Gana.ino];\n    Gana.name = mhahConstant.Gana.name[Gana.ino];\n\n    Karna.name = mhahConstant.Karna.name[n_karana];\n    Karna.name_en_IN = mhahConstant.Karna.name_en_IN[n_karana];\n    Karna.ino = n_karana;\n    Karna.start = s_karana.start;\n    Karna.end = s_karana.end;\n    Yoga.name = mhahConstant.Yoga.name[n_yoga];\n    Yoga.name_en_IN = mhahConstant.Yoga.name_en_IN[n_yoga];\n    Yoga.ino = n_yoga;\n    Yoga.start = s_yoga.start;\n    Yoga.end = s_yoga.end;\n    Tithi.name = mhahConstant.Tithi.name[n_tithi];\n    Tithi.name_en_IN = mhahConstant.Tithi.name_en_IN[n_tithi];\n    Tithi.ino = n_tithi;\n    Tithi.start = s_tithi.start;\n    Tithi.end = s_tithi.end;\n\n    Paksha.ino = n_paksha;\n    Paksha.name = mhahConstant.Paksha.name[n_paksha];\n    Paksha.name_en_IN = mhahConstant.Paksha.name_en_IN[n_paksha];\n    Paksha.name_en_UK = mhahConstant.Paksha.name_en_UK[n_paksha];\n\n    Julian.date = jd;\n    Julian.day = Math.floor(jd);\n\n    return {\n      Day,\n      Tithi,\n      Paksha,\n      Nakshatra,\n      Karna,\n      Yoga,\n      Ayanamsa,\n      Raasi,\n      Julian,\n      Gana,\n      Guna,\n      Trinity,\n    };\n  }\n\n  getTithi(Lmoon: number, Lsun: number) {\n    if (Lmoon < Lsun) Lmoon += 360;\n    return Math.floor((Lmoon - Lsun) / 12);\n  }\n\n  getNakshatra(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lmoon: number,\n    ayanamsa: number\n  ) {\n    let Lmoon0 = mhahPanchangImpl.fix360(Lmoon + ayanamsa);\n    return Math.floor((Lmoon0 * 6) / 80);\n  }\n\n  getZYoga(mhahPanchangImpl: MhahPanchangImpl, ayanamsa: number, jd: number) {\n    mhahPanchangImpl.moon(jd);\n    mhahPanchangImpl.sun(jd);\n    let dmoonYoga = mhahPanchangImpl.LmoonYoga + ayanamsa - 491143.07698973856;\n    let dsunYoga = mhahPanchangImpl.LsunYoga + ayanamsa - 36976.91240579201;\n\n    return dmoonYoga + dsunYoga;\n  }\n\n  getYoga(zyoga: number) {\n    let n_yoga = (zyoga * 6) / 80;\n    while (n_yoga < 0) n_yoga += 27;\n    while (n_yoga > 27) n_yoga -= 27;\n\n    return Math.floor(n_yoga);\n  }\n\n  getKarana(Lmoon0: number, Lsun0: number) {\n    let n_karana = 0,\n      nk = 0;\n    if (Lmoon0 < Lsun0) Lmoon0 += 360;\n    nk = Math.floor((Lmoon0 - Lsun0) / 6);\n    if (nk === 0) n_karana = 10;\n    if (nk >= 57) n_karana = nk - 50;\n    if (nk > 0 && nk < 57) n_karana = nk - 1 - Math.floor((nk - 1) / 7) * 7;\n    return [n_karana, nk];\n  }\n\n  getRaasi(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lmoon: number,\n    ayanamsa: number\n  ) {\n    return Math.floor(Math.abs(mhahPanchangImpl.fix360(Lmoon + ayanamsa)) / 30);\n  }\n\n  getPaksha(n_tithi: number): number {\n    return n_tithi > 15 ? 1 : 0;\n  }\n\n  getRaasiGuna(raasiIndex) {\n    return raasiIndex % 3;\n  }\n\n  getTrinityByNakshatra(raasiIndex) {\n    return Math.floor(raasiIndex / 9);\n  }\n\n  getGanaViaNakshatra(raasiIndex) {\n    let ganaPostions = [\n      0,\n      1,\n      2,\n      1,\n      0,\n      1,\n      0,\n      0,\n      2,\n      2,\n      1,\n      1,\n      0,\n      2,\n      0,\n      2,\n      0,\n      2,\n      2,\n      1,\n      1,\n      0,\n      2,\n      2,\n      1,\n      1,\n      0,\n    ];\n    return ganaPostions[raasiIndex];\n  }\n}\n","export class MhahLocalConstant {\n  Ritu = {\n    name: ['ବସନ୍ତ', 'ଗ୍ରୀଷ୍ମ', 'ବର୍ଷା', 'ଶରତ', 'ହେମନ୍ତ', 'ଶୀତ'],\n    name_en_UK: [\n      'Spring',\n      'Summer',\n      'Monsoon',\n      'Autumn',\n      'Pre-Winter',\n      'Winter',\n    ],\n  };\n  Masa = {\n    name: [\n      'ବୈଶାଖ',\n      'ଜ୍ୟେଷ୍ଠ',\n      'ଆଷାଢ',\n      'ଶ୍ରାବଣ',\n      'ଭାଦ୍ରବ',\n      'ଆଶ୍ଵିନ',\n      'କାର୍ତ୍ତିକ',\n      'ମାର୍ଗଶିର',\n      'ପୌଷ',\n      'ମାଘ',\n      'ଫାଲ୍ଗୁନ',\n      'ଚୈତ୍ର',\n    ],\n    name_en_IN: [\n      'Baisakha',\n      'Jyestha',\n      'Asadha',\n      'Srabana',\n      'Bhadraba',\n      'Aswina',\n      'Karttika',\n      'Margasira',\n      'Pausa',\n      'Magha',\n      'Phalguna',\n      'Chaitra',\n    ],\n  };\n  Raasi: {\n    name: string[];\n    name_en_UK: string[];\n  } = {\n    name: [\n      'ମେଷ',\n      'ବୃଷ',\n      'ମିଥୁନ',\n      'କର୍କଟ',\n      'ସିଂହ',\n      'କନ୍ୟା',\n      'ତୁଳା',\n      'ବିଛା',\n      'ଧନୁ',\n      'ମକର',\n      'କୁମ୍ଭ',\n      'ମୀନ',\n    ],\n    name_en_UK: [\n      'Aries',\n      'Taurus',\n      'Gemini',\n      'Cancer',\n      'Leo',\n      'Virgo',\n      'Libra',\n      'Scorpio',\n      'Sagittarius',\n      'Capricorn',\n      'Aquarius',\n      'Pisces',\n    ],\n  };\n  Day = {\n    name: [\n      'ରବିବାର',\n      'ସୋମବାର',\n      'ମଙ୍ଗଳବାର',\n      'ବୁଧୁବାର',\n      'ଗୁରୁବାର',\n      'ଶୁକ୍ରବାର',\n      'ଶନିବାର',\n    ],\n    name_en_UK: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  };\n  Nakshatra = {\n    name: [\n      'ଅଶ୍ଵିନୀ',\n      'ଦ୍ଵିଜା',\n      'କୃତ୍ତିକା',\n      'ରୋହିଣୀ',\n      'ମୃଗଶିରା',\n      'ଆର୍ଦ୍ରା',\n      'ପୁନର୍ବସୁ',\n      'ପୁଷ୍ୟା',\n      'ଆଶ୍ଳେଷା',\n      'ମଘା',\n      'ପୂର୍ବଫାଲ୍ଗୁନୀ',\n      'ଉତ୍ତରାଫାଲ୍ଗୁନୀ',\n      'ହସ୍ତା',\n      'ଚିତ୍ରା',\n      'ସ୍ଵାତୀ',\n      'ବିଶାଖା',\n      'ଅନୁରାଧା',\n      'ଜ୍ୟେଷ୍ଠା',\n      'ମୂଳା',\n      'ପୂର୍ବଷାଢା',\n      'ଉତ୍ତରାଷାଢା',\n      'ଶ୍ରବଣା',\n      'ଧନିଷ୍ଠା',\n      'ସତଭିଷା',\n      'ପୂର୍ବଭାଦ୍ର',\n      'ଉତ୍ତରାଭାଦ୍ର',\n      'ରେବତୀ',\n    ],\n\n    name_en_IN: [\n      'Ashwini',\n      'Dwija',\n      'Krittika',\n      'Rohini',\n      'Mrigashirsha',\n      'Ardra',\n      'Punarvasu',\n      'Pushya',\n      'Ashlesha',\n      'Magha',\n      'Purva Phalguni',\n      'Uttara Phalguni',\n      'Hasta',\n      'Chitra',\n      'Swati',\n      'Vishakha',\n      'Anuradha',\n      'Jyeshtha',\n      'Mula',\n      'Purva Ashadha',\n      'Uttara Ashadha',\n      'Sravana',\n      'Dhanishta',\n      'Shatabhisha',\n      'Purva Bhadrapada',\n      'Uttara Bhadrapada',\n      'Rebati',\n    ],\n  };\n  Paksha = {\n    name_en_IN: ['Shukla', 'Krishna'],\n    name_en_UK: ['Waxing Moon', 'Waning Moon'],\n    name: ['ଶୁକ୍ଲ', 'କୃଷ୍ଣ'],\n  };\n\n  Tithi = {\n    name: [\n      'ପ୍ରତିପଦା',\n      'ଦ୍ଵିତୀୟା',\n      'ତୃତୀୟା',\n      'ଚତୁର୍ଥୀ',\n      'ପଞ୍ଚମୀ',\n      'ଷଷ୍ଠୀ',\n      'ସପ୍ତମୀ',\n      'ଅଷ୍ଟମୀ',\n      'ନବମୀ',\n      'ଦଶମୀ',\n      'ଏକାଦଶୀ',\n      'ଦ୍ଵାଦଶୀ',\n      'ତ୍ରୟୋଦଶୀ',\n      'ଚତୁର୍ଦ୍ଦଶୀ',\n      'ପୁର୍ଣିମା',\n      'ପ୍ରତିପଦା',\n      'ଦ୍ଵିତୀୟା',\n      'ତୃତୀୟା',\n      'ଚତୁର୍ଥୀ',\n      'ପଞ୍ଚମୀ',\n      'ଷଷ୍ଠୀ',\n      'ସପ୍ତମୀ',\n      'ଅଷ୍ଟମୀ',\n      'ନବମୀ',\n      'ଦଶମୀ',\n      'ଏକାଦଶୀ',\n      'ଦ୍ଵାଦଶୀ',\n      'ତ୍ରୟୋଦଶୀ',\n      'ଚତୁର୍ଦ୍ଦଶୀ',\n      'ଅମାବାସ୍ୟା',\n    ],\n    name_en_IN: [\n      'Padyami',\n      'Vidhiya',\n      'Thadiya',\n      'Chavithi',\n      'Panchami',\n      'Shasti',\n      'Sapthami',\n      'Ashtami',\n      'Navami',\n      'Dasami',\n      'Ekadasi',\n      'Dvadasi',\n      'Trayodasi',\n      'Chaturdasi',\n      'Punnami',\n      'Padyami',\n      'Vidhiya',\n      'Thadiya',\n      'Chaviti',\n      'Panchami',\n      'Shasti',\n      'Sapthami',\n      'Ashtami',\n      'Navami',\n      'Dasami',\n      'Ekadasi',\n      'Dvadasi',\n      'Trayodasi',\n      'Chaturdasi',\n      'Amavasya',\n    ],\n  };\n  Karna = {\n    name_en_IN: [\n      'Bawa',\n      'Balava',\n      'Kaulava',\n      'Taitula',\n      'Garaja',\n      'Vanija',\n      'Vishti',\n      'Sakuna',\n      'Chatushpada',\n      'Nagava',\n      'Kimstughana',\n    ],\n    name: [\n      'ବବ',\n      'ବାଳବ',\n      'କୌଳବ',\n      'ତୈତିଳ',\n      'ଗର',\n      'ବାଣିଜ୍ୟ',\n      'ବିଷ୍ଟି',\n      'ଶକୁନି',\n      'ଚତୁଷ୍ପଦ',\n      'ନାଗ',\n      'କିଂସ୍ତୁଘ୍ନ',\n    ],\n  };\n  Yoga = {\n    name_en_IN: [\n      'Vishkambha',\n      'Prithi',\n      'Ayushman',\n      'Saubhagya',\n      'Sobhana',\n      'Atiganda',\n      'Sukarman',\n      'Dhrithi',\n      'Soola',\n      'Ganda',\n      'Vridhi',\n      'Dhruva',\n      'Vyaghata',\n      'Harshana',\n      'Vajra',\n      'Siddhi',\n      'Vyatipata',\n      'Variyan',\n      'Parigha',\n      'Siva',\n      'Siddha',\n      'Sadhya',\n      'Subha',\n      'Sukla',\n      'Bramha',\n      'Indra',\n      'Vaidhruthi',\n    ],\n    name: [\n      'ବିଷ୍ କୁମ୍ଭ',\n      'ପ୍ରୀତି',\n      'ଆୟୁଷ୍ମାନ',\n      'ସୌଭାଗ୍ୟ',\n      'ଶୋଭନ',\n      'ଅତିଗଣ୍ଡ',\n      'ସୁକର୍ମା',\n      'ଧୃତି',\n      'ଶୂଳ',\n      'ଗଣ୍ଡ',\n      'ବୃଦ୍ଧି',\n      'ଧ୍ରୁବ',\n      'ବ୍ୟାଘାତ',\n      'ହର୍ଷଣ',\n      'ବଜ୍ର',\n      'ଅସୃକ୍',\n      'ବ୍ୟତିପାତ',\n      'ବରୀୟାନ',\n      'ପରିଘ',\n      'ଶିବ',\n      'ସିଦ୍ଧ',\n      'ସାଧ୍ଧ',\n      'ଶୁଭ',\n      'ଶୁକ୍ଳ',\n      'ବ୍ରହ୍ମ',\n      'ଇନ୍ଦ୍ର',\n      'ବୈଧୃତି',\n    ],\n  };\n  Trinity = {\n    name_en_IN: ['Brahma', 'Vishnu', 'Shiva'],\n    name: ['ବ୍ରହ୍ମା', 'ବିଷ୍ଣୁ', 'ଶିବ'],\n  };\n  Guna = {\n    name_en_IN: ['Rajas', 'Tamas', 'Satva'],\n    name_en_UK: [\n      'passion, activity, movement',\n      'ignorance, inertia, laziness',\n      'goodness, calmness, harmonious',\n    ],\n    name: ['ରାଜସ୍', 'ତମାସ୍', 'ସତ୍ୟ'],\n  };\n\n  Gana = {\n    name_en_IN: ['Devata', 'Manushya', 'Rakshasa'],\n    name_en_UK: ['God', 'Human', 'Demon'],\n    name: ['ଦେବତା', 'ମନୁଷ୍ୟ', 'ରାକ୍ଷସ'],\n  };\n}\n","export class MhahPkgConstants {\n  GanaMatched = [\n    [6, 6, 0],\n    [5, 6, 0],\n    [1, 0, 6],\n  ];\n}\n","export class MhahSunMoonTimer {\n  rad = Math.PI / 180;\n\n  // sun times configuration (angle, morning name, evening name)\n\n  times = [\n    [-0.833, 'sunRise', 'sunSet'],\n    [-0.3, 'sunRiseEnd', 'sunSetStart'],\n    [-6, 'dawn', 'dusk'],\n    [-12, 'nauticalDawn', 'nauticalDusk'],\n    [-18, 'nightEnd', 'night'],\n  ];\n\n  sunTimer(date: Date, lat: number, lng: number, height?: number) {\n    let calS = this.calculatSunTimer(date, lat, lng, height);\n    let result: any = {\n      solarNoon: this.fromJulian(calS.Jnoon),\n      nadir: this.fromJulian(calS.Jnoon - 0.5),\n    };\n    let i, time, h0, Jset, Jrise;\n    for (i = 0; i < this.times.length; i += 1) {\n      time = this.times[i];\n      h0 = (time[0] + calS.dh) * this.rad;\n\n      Jset = this.getSetJ(\n        h0,\n        calS.lw,\n        calS.phi,\n        calS.dec,\n        calS.n,\n        calS.M,\n        calS.L\n      );\n      Jrise = calS.Jnoon - (Jset - calS.Jnoon);\n\n      result[time[1]] = this.fromJulian(Jrise);\n      result[time[2]] = this.fromJulian(Jset);\n    }\n    return result;\n  }\n\n  calculatSunTimer(date: Date, lat: number, lng: number, height?: number) {\n    height = height || 0;\n\n    let lw = this.rad * -lng,\n      phi = this.rad * lat,\n      dh = this.observerAngle(height),\n      d = this.toDays(date),\n      n = this.julianCycle(d, lw),\n      ds = this.approxTransit(0, lw, n),\n      M = this.solarMeanAnomaly(ds),\n      L = this.eclipticLongitude(M),\n      dec = this.declination(L, 0),\n      Jnoon = this.solarTransitJ(ds, M, L);\n\n    return { Jnoon, dh, lw, phi, dec, n, M, L };\n  }\n\n  getSunRiseJd(date: Date, lat: number, lng: number, height?: number) {\n    let calS = this.calculatSunTimer(date, lat, lng, height);\n    let time, h0, Jset, Jrise;\n    time = this.times[0];\n    h0 = (time[0] + calS.dh) * this.rad;\n    Jset = this.getSetJ(\n      h0,\n      calS.lw,\n      calS.phi,\n      calS.dec,\n      calS.n,\n      calS.M,\n      calS.L\n    );\n    Jrise = calS.Jnoon - (Jset - calS.Jnoon);\n    return Jrise;\n  }\n\n  dayMs = 1000 * 60 * 60 * 24;\n  J1970 = 2440588;\n  J2000 = 2451545;\n  J0 = 0.0009;\n  observerAngle(height) {\n    return (-2.076 * Math.sqrt(height)) / 60;\n  }\n  julianCycle(d, lw) {\n    return Math.round(d - this.J0 - lw / (2 * Math.PI));\n  }\n  toJulian(date) {\n    return date.valueOf() / this.dayMs - 0.5 + this.J1970;\n  }\n  fromJulian(j) {\n    return new Date((j + 0.5 - this.J1970) * this.dayMs);\n  }\n  toDays(date) {\n    return this.toJulian(date) - this.J2000;\n  }\n  approxTransit(Ht, lw, n) {\n    return this.J0 + (Ht + lw) / (2 * Math.PI) + n;\n  }\n  hourAngle(h, phi, d) {\n    return Math.acos(\n      (Math.sin(h) - Math.sin(phi) * Math.sin(d)) /\n        (Math.cos(phi) * Math.cos(d))\n    );\n  }\n  solarTransitJ(ds, M, L) {\n    return this.J2000 + ds + 0.0053 * Math.sin(M) - 0.0069 * Math.sin(2 * L);\n  }\n  solarMeanAnomaly(d) {\n    return this.rad * (357.5291 + 0.98560028 * d);\n  }\n  eclipticLongitude(M) {\n    var C =\n        this.rad *\n        (1.9148 * Math.sin(M) +\n          0.02 * Math.sin(2 * M) +\n          0.0003 * Math.sin(3 * M)), // equation of center\n      P = this.rad * 102.9372; // perihelion of the Earth\n    return M + C + P + Math.PI;\n  }\n  e = this.rad * 23.4397; // obliquity of the Earth\n  declination(l, b) {\n    return Math.asin(\n      Math.sin(b) * Math.cos(this.e) +\n        Math.cos(b) * Math.sin(this.e) * Math.sin(l)\n    );\n  }\n\n  getSetJ(h, lw, phi, dec, n, M, L) {\n    var w = this.hourAngle(h, phi, dec),\n      a = this.approxTransit(w, lw, n);\n    return this.solarTransitJ(a, M, L);\n  }\n}\n","import { MhahLocalConstant } from './mhahLocalConstant';\nimport { MhahPanchangImpl } from './mhahPanchangImpl';\nimport { MhahSunMoonTimer } from './mhahSunMoonTimer';\nimport { MhahCalculateFunc } from './mhahCalculateFunc';\nexport class MhahCalendar {\n  calendar(\n    mhahConstant: MhahLocalConstant,\n    dt: Date,\n    lat: number,\n    lng: number,\n    height?: number\n  ) {\n    let Tithi: any = {} as {};\n    let Nakshatra: any = {} as {};\n    let Yoga: any = {} as {};\n    let Karna: any = {} as {};\n    let Masa: any = {} as {};\n    let MoonMasa: any = {} as {};\n    let Raasi: any = {} as {};\n    let Ritu: any = {} as {};\n    let Paksha: any = {} as {};\n    let Gana: any = {} as {};\n    let Guna: any = {} as {};\n    let Trinity: any = {} as {};\n    let mhahPanchangImpl = new MhahPanchangImpl(mhahConstant);\n    let mhahCalculateFunc = new MhahCalculateFunc();\n    let mhahSunMoonTimer = new MhahSunMoonTimer();\n    let sunRise = mhahSunMoonTimer.getSunRiseJd(dt, lat, lng, height);\n    let nn_tithi = this.getCalendarTithi(sunRise, mhahPanchangImpl);\n    let nn_paksha = mhahCalculateFunc.getPaksha(nn_tithi);\n    let ayanamsaAtRise = mhahPanchangImpl.calcayan(sunRise);\n    let nn_naksh = this.getCalendarNakshatra(\n      mhahCalculateFunc,\n      mhahPanchangImpl,\n      ayanamsaAtRise,\n      sunRise\n    );\n    let nn_yoga = this.getCalendarYoga(\n      mhahCalculateFunc,\n      mhahPanchangImpl,\n      sunRise,\n      ayanamsaAtRise\n    );\n    let nn_karana = mhahCalculateFunc.getKarana(\n      mhahPanchangImpl.moon(sunRise),\n      mhahPanchangImpl.sun(sunRise)\n    )[0];\n    let nn_raasi = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(sunRise),\n      ayanamsaAtRise\n    );\n\n    let masa: { n_maasa: number; is_leap_month: boolean } = this.getMasa(\n      mhahPanchangImpl,\n      nn_tithi,\n      sunRise\n    );\n\n    let ritu = this.getRitu(masa.n_maasa);\n\n    Raasi.ino = nn_raasi - 1;\n    Raasi.name_en_UK = mhahConstant.Raasi.name_en_UK[nn_raasi - 1];\n    Raasi.name = mhahConstant.Raasi.name[nn_raasi - 1];\n    Guna.ino = mhahCalculateFunc.getRaasiGuna(Raasi.ino);\n    Guna.name_en_IN = mhahConstant.Guna.name_en_IN[Guna.ino];\n    Guna.name_en_UK = mhahConstant.Guna.name_en_UK[Guna.ino];\n    Guna.name = mhahConstant.Guna.name[Guna.ino];\n\n    Tithi.name = mhahConstant.Tithi.name[nn_tithi - 1];\n    Tithi.name_en_IN = mhahConstant.Tithi.name_en_IN[nn_tithi - 1];\n    Tithi.ino = nn_tithi - 1;\n    Paksha.ino = nn_paksha;\n    Paksha.name = mhahConstant.Paksha.name[nn_paksha];\n    Paksha.name_en_IN = mhahConstant.Paksha.name_en_IN[nn_paksha];\n    Paksha.name_en_UK = mhahConstant.Paksha.name_en_UK[nn_paksha];\n\n    Nakshatra.name = mhahConstant.Nakshatra.name[nn_naksh];\n    Nakshatra.name_en_IN = mhahConstant.Nakshatra.name_en_IN[nn_naksh];\n    Nakshatra.ino = nn_naksh;\n    Trinity.ino = mhahCalculateFunc.getTrinityByNakshatra(Nakshatra.ino);\n    Trinity.name_en_IN = mhahConstant.Trinity.name_en_IN[Trinity.ino];\n    Trinity.name = mhahConstant.Trinity.name[Trinity.ino];\n    Gana.ino = mhahCalculateFunc.getGanaViaNakshatra(Nakshatra.ino);\n    Gana.name_en_IN = mhahConstant.Gana.name_en_IN[Gana.ino];\n    Gana.name_en_UK = mhahConstant.Gana.name_en_UK[Gana.ino];\n    Gana.name = mhahConstant.Gana.name[Gana.ino];\n\n    Yoga.name = mhahConstant.Yoga.name[nn_yoga];\n    Yoga.name_en_IN = mhahConstant.Yoga.name_en_IN[nn_yoga];\n    Yoga.ino = nn_yoga;\n    Karna.name = mhahConstant.Karna.name[nn_karana];\n    Karna.name_en_IN = mhahConstant.Karna.name_en_IN[nn_karana];\n    Karna.ino = nn_karana;\n    Masa.ino = nn_raasi - 1;\n    Masa.name = mhahConstant.Masa.name[nn_raasi - 1];\n    Masa.name_en_IN = mhahConstant.Masa.name_en_IN[nn_raasi - 1];\n    MoonMasa.ino = masa.n_maasa - 1;\n    MoonMasa.isLeapMonth = masa.is_leap_month;\n    MoonMasa.name = mhahConstant.Masa.name[masa.n_maasa - 1];\n    MoonMasa.name_en_IN = mhahConstant.Masa.name_en_IN[masa.n_maasa - 1];\n    Ritu.ino = ritu;\n    Ritu.name = mhahConstant.Ritu.name[ritu];\n    Ritu.name_en_UK = mhahConstant.Ritu.name_en_UK[ritu];\n    return {\n      Tithi,\n      Paksha,\n      Nakshatra,\n      Yoga,\n      Karna,\n      Masa,\n      MoonMasa,\n      Raasi,\n      Ritu,\n      Gana,\n      Guna,\n      Trinity,\n    };\n  }\n\n  // get tithi in (1-15) Sukla and (16-30) Krushna\n  getCalendarTithi(sunRise: number, mhahPanchangImpl: MhahPanchangImpl) {\n    let moonPhaseToday = mhahPanchangImpl.lunarPhase(sunRise);\n    let today = Math.ceil(moonPhaseToday / 12);\n    let tithi = today;\n    //check for skipped tithi\n    let moonPhaseTommorow = mhahPanchangImpl.lunarPhase(sunRise + 1);\n    let tommorow = Math.ceil(moonPhaseTommorow / 12);\n    let isSkipped = (tommorow - today) % 30 > 1;\n    if (isSkipped) {\n      tithi = today + 1;\n    }\n    return tithi;\n  }\n\n  getCalendarNakshatra(\n    mhahCalculateFunc: MhahCalculateFunc,\n    mhahPanchangImpl: MhahPanchangImpl,\n    ayanamsa: number,\n    sunRise: number\n  ) {\n    let nak_today = mhahCalculateFunc.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.moon(sunRise),\n      ayanamsa\n    );\n    let nak_tmrw = mhahCalculateFunc.getNakshatra(\n      mhahPanchangImpl,\n      mhahPanchangImpl.moon(sunRise + 1),\n      mhahPanchangImpl.calcayan(sunRise + 1)\n    );\n    let n_nak = nak_today;\n    let isSkipped = (nak_tmrw - nak_today) % 27 > 1;\n    if (isSkipped) {\n      n_nak = nak_today + 1;\n    }\n    return n_nak;\n  }\n\n  getCalendarYoga(\n    mhahCalculateFunc: MhahCalculateFunc,\n    mhahPanchangImpl: MhahPanchangImpl,\n    sunRise: number,\n    ayanamsa: number\n  ) {\n    let todayYoga = mhahCalculateFunc.getYoga(\n      mhahCalculateFunc.getZYoga(mhahPanchangImpl, ayanamsa, sunRise)\n    );\n    let tmorowYoga = mhahCalculateFunc.getYoga(\n      mhahCalculateFunc.getZYoga(\n        mhahPanchangImpl,\n        mhahPanchangImpl.calcayan(sunRise + 1),\n        sunRise + 1\n      )\n    );\n    let n_yoga = todayYoga;\n    let isSkipped = (tmorowYoga - todayYoga) % 27 > 1;\n    if (isSkipped) {\n      n_yoga = todayYoga + 1;\n    }\n    return n_yoga;\n  }\n\n  getCalendarRaasi(\n    mhahPanchangImpl: MhahPanchangImpl,\n    Lsun: number,\n    ayanamsa: number\n  ) {\n    let solar_nirayana = mhahPanchangImpl.fix360(Lsun + ayanamsa);\n    return Math.ceil(solar_nirayana / 30);\n  }\n\n  getMasa(mhahPanchangImpl: MhahPanchangImpl, tithi: number, sunrise: number) {\n    let lastNewMoon = sunrise - (tithi - 1);\n    let nextNewMoon = sunrise + (29 - (tithi - 1));\n    let currentSolarMonth = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(lastNewMoon),\n      mhahPanchangImpl.calcayan(lastNewMoon)\n    );\n    let nextSolarMonth = this.getCalendarRaasi(\n      mhahPanchangImpl,\n      mhahPanchangImpl.sun(nextNewMoon),\n      mhahPanchangImpl.calcayan(nextNewMoon)\n    );\n\n    let is_leap_month = currentSolarMonth === nextSolarMonth;\n    let n_maasa = is_leap_month ? currentSolarMonth : currentSolarMonth + 1;\n    if (n_maasa > 12) {\n      n_maasa = n_maasa % 12;\n    }\n\n    return { n_maasa, is_leap_month };\n  }\n\n  getRitu(masa_num: number): number {\n    return Math.floor((masa_num - 1) / 2);\n  }\n}\n","import { MhahCalculateFunc } from './mhahCalculateFunc';\nimport { MhahLocalConstant } from './mhahLocalConstant';\nimport { MhahPkgConstants } from './mhahPkgConstants';\nimport { MhahSunMoonTimer } from './mhahSunMoonTimer';\nimport { MhahCalendar } from './mhahCalendar';\n\nexport class MhahPanchang {\n  private mhahLocalConstant = new MhahLocalConstant();\n  private mhahPkgConstants = new MhahPkgConstants();\n  private mhahCalculateFunc = new MhahCalculateFunc();\n  private mhahSunMoonTimer = new MhahSunMoonTimer();\n  private mhahCalendar = new MhahCalendar();\n  calculate(dt: Date) {\n    return this.mhahCalculateFunc.calculate(dt, this.mhahLocalConstant);\n  }\n\n  calendar(dt: Date, lat: number, lng: number, height?: number) {\n    return this.mhahCalendar.calendar(\n      this.mhahLocalConstant,\n      dt,\n      lat,\n      lng,\n      height\n    );\n  }\n\n  sunTimer(date: Date, lat: number, lng: number, height?: number) {\n    height = height || 0;\n    return this.mhahSunMoonTimer.sunTimer(date, lat, lng, height);\n  }\n\n  getMhahConstant(catgory: string, name: string): Array<string> {\n    return this.mhahLocalConstant[catgory][name];\n  }\n\n  setMhahConstant(catgory: string, name: string, mhahlist: Array<string>) {\n    this.mhahLocalConstant[catgory][name] = mhahlist;\n  }\n\n  getGanaMatched(brideIno: number, groomIno: number) {\n    return this.mhahPkgConstants.GanaMatched[brideIno][groomIno];\n  }\n}\n"],"names":["corr","mlcor","mscor","fcor","dcor","lcor","corr2","l","ml","ms","f","d","MhahMoonOutragConst","MhahPanchangImpl","mhahConstant","Math","PI","daysInMonth","m","y","g_days","moon","jd","tdays","t","t2","t3","this","fix360","r2rad","d2r","tb","t2c","a1","sin","a2","c2","cos","a3","a4","c4","a5","a6","dlm","dls","dgc","lk","lk1","i1corr","i2corr","i","sinarg","mhahMoonOutragConst","corrMoon","corrMoon2","dlid","nutation","LmoonYoga","vl","skor","sun","truanom","ls","g","ex","u","kepler","b","sqrt","abs","atan","tan","r2d","u1","u2","u3","u4","u6","u5","dl","dr","il","ab","LsunYoga","tithi","n1","tzone","len","flag","s_t","jdt","knv","floor","itit","aspect","novolun","Lsun0","Lmoon0","asp1","start","calData","dt","end","nakshatra","n_naksh","inak","ayanamsa","yoga","zyoga","z","nn_yoga","Array","iyog","jdnv","djd","err","u0","delta","om","d2","l2","ls2","nut","calcayan","mdy2julian","im","j","dTime","efdt","dgod","kyear","kmon","kday","i1","alf","z1","z2","c","e","days","hh1","khr","kmin","ksek","Date","lon2dmsz","x","ss0","round","lon2dms","v","weekDay","jd0","jdn","dn1","lunarPhase","Lmoon","Lsun","MhahCalculateFunc","calculate","n_wday","n_tithi","n_karana","n_yoga","mhahPanchangImpl","Day","Tithi","Paksha","Nakshatra","Karna","Yoga","Ayanamsa","Raasi","Julian","Gana","Guna","Trinity","day","getDate","mon","getMonth","year","getFullYear","hr","getHours","getMinutes","getTimezoneOffset","inpmin","jdlt","ino","name","name_en_UK","jdut","getZYoga","getYoga","s_yoga","getNakshatra","s_naksh","getTithi","s_tithi","n_paksha","getPaksha","KaranaArray","getKarana","s_karana","getRaasi","getRaasiGuna","name_en_IN","getTrinityByNakshatra","getGanaViaNakshatra","date","nk","raasiIndex","MhahLocalConstant","MhahPkgConstants","MhahSunMoonTimer","rad","sunTimer","lat","lng","height","time","Jset","calS","calculatSunTimer","result","solarNoon","fromJulian","Jnoon","nadir","times","length","getSetJ","dh","lw","phi","dec","n","M","L","observerAngle","toDays","julianCycle","ds","approxTransit","solarMeanAnomaly","eclipticLongitude","declination","solarTransitJ","getSunRiseJd","J0","toJulian","valueOf","dayMs","J1970","J2000","Ht","hourAngle","h","acos","asin","w","a","MhahCalendar","calendar","Masa","MoonMasa","Ritu","mhahCalculateFunc","sunRise","nn_tithi","getCalendarTithi","nn_paksha","ayanamsaAtRise","nn_naksh","getCalendarNakshatra","getCalendarYoga","nn_karana","nn_raasi","getCalendarRaasi","masa","getMasa","ritu","getRitu","n_maasa","isLeapMonth","is_leap_month","moonPhaseToday","today","ceil","moonPhaseTommorow","nak_today","n_nak","todayYoga","solar_nirayana","sunrise","lastNewMoon","nextNewMoon","currentSolarMonth","masa_num","mhahLocalConstant","mhahCalendar","mhahSunMoonTimer","getMhahConstant","catgory","setMhahConstant","mhahlist","getGanaMatched","brideIno","groomIno","mhahPkgConstants","GanaMatched"],"mappings":"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CACJ,QACA,UACA,OACA,SACA,SACA,SACA,YACA,WACA,MACA,MACA,UACA,SAEFiB,WAAY,CACV,WACA,UACA,SACA,UACA,WACA,SACA,WACA,YACA,QACA,QACA,WACA,uBAMA,CACFjB,KAAM,CACJ,MACA,MACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,MACA,QACA,OAEFC,WAAY,CACV,QACA,SACA,SACA,SACA,MACA,QACA,QACA,UACA,cACA,YACA,WACA,oBAGE,CACJD,KAAM,CACJ,SACA,SACA,WACA,UACA,UACA,WACA,UAEFC,WAAY,CACV,SACA,SACA,UACA,YACA,WACA,SACA,4BAGQ,CACVD,KAAM,CACJ,UACA,SACA,WACA,SACA,UACA,UACA,WACA,SACA,UACA,MACA,gBACA,iBACA,QACA,SACA,SACA,SACA,UACA,WACA,OACA,YACA,aACA,SACA,UACA,SACA,aACA,cACA,SAGFiB,WAAY,CACV,UACA,QACA,WACA,SACA,eACA,QACA,YACA,SACA,WACA,QACA,iBACA,kBACA,QACA,SACA,QACA,WACA,WACA,WACA,OACA,gBACA,iBACA,UACA,YACA,cACA,mBACA,oBACA,uBAGK,CACPA,WAAY,CAAC,SAAU,WACvBhB,WAAY,CAAC,cAAe,eAC5BD,KAAM,CAAC,QAAS,qBAGV,CACNA,KAAM,CACJ,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,WACA,aACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,WACA,aACA,aAEFiB,WAAY,CACV,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,UACA,YACA,aACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,UACA,YACA,aACA,wBAGI,CACNA,WAAY,CACV,OACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,cACA,SACA,eAEFjB,KAAM,CACJ,KACA,OACA,OACA,QACA,KACA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"}